# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see docs/Kconfig-language.txt.
#

menu "Linux System Utilities"

config BUSYBOX_ACPID
	bool "acpid (9 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	acpid listens to ACPI events coming either in textual form from
	/proc/acpi/event (though it is marked deprecated it is still widely
	used and _is_ a standard) or in binary form from specified evdevs
	(just use /dev/input/event*).

	It parses the event to retrieve ACTION and a possible PARAMETER.
	It then spawns /etc/acpi/<ACTION>[/<PARAMETER>] either via run-parts
	(if the resulting path is a directory) or directly as an executable.

	N.B. acpid relies on run-parts so have the latter installed.

config BUSYBOX_FEATURE_ACPID_COMPAT
	bool "Accept and ignore redundant options"
	default y
	depends on BUSYBOX_ACPID
	help
	Accept and ignore compatibility options -g -m -s -S -v.
config BUSYBOX_BLKDISCARD
	bool "blkdiscard (4.3 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	blkdiscard discards sectors on a given device.
config BUSYBOX_BLKID
	bool "blkid (12 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	select BUSYBOX_VOLUMEID
	help
	Lists labels and UUIDs of all filesystems.

config BUSYBOX_FEATURE_BLKID_TYPE
	bool "Print filesystem type"
	default y
	depends on BUSYBOX_BLKID
	help
	Show TYPE="filesystem type"
config BUSYBOX_BLOCKDEV
	bool "blockdev (2.3 kb)"
	default y
	help
	Performs some ioctls with block devices.
config BUSYBOX_CAL
	bool "cal (5.8 kb)"
	default y
	help
	cal is used to display a monthly calendar.
config BUSYBOX_CHRT
	bool "chrt (4.7 kb)"
	default y
	help
	Manipulate real-time attributes of a process.
	This requires sched_{g,s}etparam support in your libc.
config BUSYBOX_DMESG
	bool "dmesg (3.7 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	dmesg is used to examine or control the kernel ring buffer. When the
	Linux kernel prints messages to the system log, they are stored in
	the kernel ring buffer. You can use dmesg to print the kernel's ring
	buffer, clear the kernel ring buffer, change the size of the kernel
	ring buffer, and change the priority level at which kernel messages
	are also logged to the system console. Enable this option if you
	wish to enable the 'dmesg' utility.

config BUSYBOX_FEATURE_DMESG_PRETTY
	bool "Pretty output"
	default y
	depends on BUSYBOX_DMESG
	help
	If you wish to scrub the syslog level from the output, say 'Y' here.
	The syslog level is a string prefixed to every line with the form
	"<#>".

	With this option you will see:
		# dmesg
		Linux version 2.6.17.4 .....
		BIOS-provided physical RAM map:
		 BIOS-e820: 0000000000000000 - 000000000009f000 (usable)

	Without this option you will see:
		# dmesg
		<5>Linux version 2.6.17.4 .....
		<6>BIOS-provided physical RAM map:
		<6> BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
config BUSYBOX_EJECT
	bool "eject (4 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Used to eject cdroms. (defaults to /dev/cdrom)

config BUSYBOX_FEATURE_EJECT_SCSI
	bool "SCSI support"
	default y
	depends on BUSYBOX_EJECT
	help
	Add the -s option to eject, this allows to eject SCSI-Devices and
	usb-storage devices.
config BUSYBOX_FALLOCATE
	bool "fallocate (4.1 kb)"
	default y
	help
	Preallocate space for files.
config BUSYBOX_FATATTR
	bool "fatattr (1.9 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	fatattr lists or changes the file attributes on a fat file system.
config BUSYBOX_FBSET
	bool "fbset (5.9 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	fbset is used to show or change the settings of a Linux frame buffer
	device. The frame buffer device provides a simple and unique
	interface to access a graphics display. Enable this option
	if you wish to enable the 'fbset' utility.

config BUSYBOX_FEATURE_FBSET_FANCY
	bool "Enable extra options"
	default y
	depends on BUSYBOX_FBSET
	help
	This option enables extended fbset options, allowing one to set the
	framebuffer size, color depth, etc. interface to access a graphics
	display. Enable this option if you wish to enable extended fbset
	options.

config BUSYBOX_FEATURE_FBSET_READMODE
	bool "Enable readmode support"
	default y
	depends on BUSYBOX_FBSET
	help
	This option allows fbset to read the video mode database stored by
	default as /etc/fb.modes, which can be used to set frame buffer
	device to pre-defined video modes.
config BUSYBOX_FDFORMAT
	bool "fdformat (4.4 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	fdformat is used to low-level format a floppy disk.
config BUSYBOX_FDISK
	bool "fdisk (37 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The fdisk utility is used to divide hard disks into one or more
	logical disks, which are generally called partitions. This utility
	can be used to list and edit the set of partitions or BSD style
	'disk slices' that are defined on a hard drive.

config BUSYBOX_FDISK_SUPPORT_LARGE_DISKS
	bool "Support over 4GB disks"
	default y
	depends on BUSYBOX_FDISK
	depends on !BUSYBOX_LFS   # with LFS no special code is needed

config BUSYBOX_FEATURE_FDISK_WRITABLE
	bool "Write support"
	default y
	depends on BUSYBOX_FDISK
	help
	Enabling this option allows you to create or change a partition table
	and write those changes out to disk. If you leave this option
	disabled, you will only be able to view the partition table.

config BUSYBOX_FEATURE_AIX_LABEL
	bool "Support AIX disklabels"
	default n
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to create or change AIX disklabels.
	Most people can safely leave this option disabled.

config BUSYBOX_FEATURE_SGI_LABEL
	bool "Support SGI disklabels"
	default n
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to create or change SGI disklabels.
	Most people can safely leave this option disabled.

config BUSYBOX_FEATURE_SUN_LABEL
	bool "Support SUN disklabels"
	default n
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to create or change SUN disklabels.
	Most people can safely leave this option disabled.

config BUSYBOX_FEATURE_OSF_LABEL
	bool "Support BSD disklabels"
	default n
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to create or change BSD disklabels
	and define and edit BSD disk slices.

config BUSYBOX_FEATURE_GPT_LABEL
	bool "Support GPT disklabels"
	default n
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to view GUID Partition Table
	disklabels.

config BUSYBOX_FEATURE_FDISK_ADVANCED
	bool "Support expert mode"
	default y
	depends on BUSYBOX_FDISK && BUSYBOX_FEATURE_FDISK_WRITABLE
	help
	Enabling this option allows you to do terribly unsafe things like
	define arbitrary drive geometry, move the beginning of data in a
	partition, and similarly evil things. Unless you have a very good
	reason you would be wise to leave this disabled.
config BUSYBOX_FINDFS
	bool "findfs (12 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	select BUSYBOX_VOLUMEID
	help
	Prints the name of a filesystem with given label or UUID.
config BUSYBOX_FLOCK
	bool "flock (6.3 kb)"
	default y
	help
	Manage locks from shell scripts
config BUSYBOX_FDFLUSH
	bool "fdflush (1.3 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	fdflush is only needed when changing media on slightly-broken
	removable media drives. It is used to make Linux believe that a
	hardware disk-change switch has been actuated, which causes Linux to
	forget anything it has cached from the previous media. If you have
	such a slightly-broken drive, you will need to run fdflush every time
	you change a disk. Most people have working hardware and can safely
	leave this disabled.

config BUSYBOX_FREERAMDISK
	bool "freeramdisk (1.3 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Linux allows you to create ramdisks. This utility allows you to
	delete them and completely free all memory that was used for the
	ramdisk. For example, if you boot Linux into a ramdisk and later
	pivot_root, you may want to free the memory that is allocated to the
	ramdisk. If you have no use for freeing memory from a ramdisk, leave
	this disabled.
config BUSYBOX_FSCK_MINIX
	bool "fsck.minix (13 kb)"
	default y
	help
	The minix filesystem is a nice, small, compact, read-write filesystem
	with little overhead. It is not a journaling filesystem however and
	can experience corruption if it is not properly unmounted or if the
	power goes off in the middle of a write. This utility allows you to
	check for and attempt to repair any corruption that occurs to a minix
	filesystem.
config BUSYBOX_FSFREEZE
	bool "fsfreeze (3.5 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	select BUSYBOX_LONG_OPTS
	help
	Halt new accesses and flush writes on a mounted filesystem.
config BUSYBOX_FSTRIM
	bool "fstrim (4.4 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Discard unused blocks on a mounted filesystem.
config BUSYBOX_GETOPT
	bool "getopt (5.8 kb)"
	default y
	help
	The getopt utility is used to break up (parse) options in command
	lines to make it easy to write complex shell scripts that also check
	for legal (and illegal) options. If you want to write horribly
	complex shell scripts, or use some horribly complex shell script
	written by others, this utility may be for you. Most people will
	wisely leave this disabled.

config BUSYBOX_FEATURE_GETOPT_LONG
	bool "Support -l LONGOPTs"
	default y
	depends on BUSYBOX_GETOPT && BUSYBOX_LONG_OPTS
	help
	Enable support for long options (option -l).
config BUSYBOX_HEXDUMP
	bool "hexdump (8.6 kb)"
	default y
	help
	The hexdump utility is used to display binary data in a readable
	way that is comparable to the output from most hex editors.

config BUSYBOX_FEATURE_HEXDUMP_REVERSE
	bool "Support -R, reverse of 'hexdump -Cv'"
	default y
	depends on BUSYBOX_HEXDUMP
	help
	The hexdump utility is used to display binary data in an ascii
	readable way. This option creates binary data from an ascii input.
	NB: this option is non-standard. It's unwise to use it in scripts
	aimed to be portable.

config BUSYBOX_HD
	bool "hd (7.8 kb)"
	default y
	help
	hd is an alias to hexdump -C.
config BUSYBOX_XXD
	bool "xxd (8.9 kb)"
	default y
	help
	The xxd utility is used to display binary data in a readable
	way that is comparable to the output from most hex editors.
config BUSYBOX_HWCLOCK
	bool "hwclock (5.8 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The hwclock utility is used to read and set the hardware clock
	on a system. This is primarily used to set the current time on
	shutdown in the hardware clock, so the hardware will keep the
	correct time when Linux is _not_ running.

config BUSYBOX_FEATURE_HWCLOCK_ADJTIME_FHS
	bool "Use FHS /var/lib/hwclock/adjtime"
	default n  # util-linux-ng in Fedora 13 still uses /etc/adjtime
	depends on BUSYBOX_HWCLOCK
	help
	Starting with FHS 2.3, the adjtime state file is supposed to exist
	at /var/lib/hwclock/adjtime instead of /etc/adjtime. If you wish
	to use the FHS behavior, answer Y here, otherwise answer N for the
	classic /etc/adjtime path.

	pathname.com/fhs/pub/fhs-2.3.html#VARLIBHWCLOCKSTATEDIRECTORYFORHWCLO
config BUSYBOX_IONICE
	bool "ionice (3.8 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Set/set program io scheduling class and priority
	Requires kernel >= 2.6.13
config BUSYBOX_IPCRM
	bool "ipcrm (3.2 kb)"
	default y
	help
	The ipcrm utility allows the removal of System V interprocess
	communication (IPC) objects and the associated data structures
	from the system.
config BUSYBOX_IPCS
	bool "ipcs (11 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The ipcs utility is used to provide information on the currently
	allocated System V interprocess (IPC) objects in the system.
config BUSYBOX_LAST
	bool "last (6.1 kb)"
	default y
	depends on BUSYBOX_FEATURE_WTMP
	help
	'last' displays a list of the last users that logged into the system.

config BUSYBOX_FEATURE_LAST_FANCY
	bool "Output extra information"
	default y
	depends on BUSYBOX_LAST
	help
	'last' displays detailed information about the last users that
	logged into the system (mimics sysvinit last). +900 bytes.
config BUSYBOX_LOSETUP
	bool "losetup (5.5 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	losetup is used to associate or detach a loop device with a regular
	file or block device, and to query the status of a loop device. This
	version does not currently support enabling data encryption.
config BUSYBOX_LSPCI
	bool "lspci (6.3 kb)"
	default y
	#select PLATFORM_LINUX
	help
	lspci is a utility for displaying information about PCI buses in the
	system and devices connected to them.

	This version uses sysfs (/sys/bus/pci/devices) only.
config BUSYBOX_LSUSB
	bool "lsusb (4.2 kb)"
	default y
	#select PLATFORM_LINUX
	help
	lsusb is a utility for displaying information about USB buses in the
	system and devices connected to them.

	This version uses sysfs (/sys/bus/usb/devices) only.
config BUSYBOX_MDEV
	bool "mdev (17 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	mdev is a mini-udev implementation for dynamically creating device
	nodes in the /dev directory.

	For more information, please see docs/mdev.txt

config BUSYBOX_FEATURE_MDEV_CONF
	bool "Support /etc/mdev.conf"
	default y
	depends on BUSYBOX_MDEV
	help
	Add support for the mdev config file to control ownership and
	permissions of the device nodes.

	For more information, please see docs/mdev.txt

config BUSYBOX_FEATURE_MDEV_RENAME
	bool "Support subdirs/symlinks"
	default y
	depends on BUSYBOX_FEATURE_MDEV_CONF
	help
	Add support for renaming devices and creating symlinks.

	For more information, please see docs/mdev.txt

config BUSYBOX_FEATURE_MDEV_RENAME_REGEXP
	bool "Support regular expressions substitutions when renaming device"
	default y
	depends on BUSYBOX_FEATURE_MDEV_RENAME
	help
	Add support for regular expressions substitutions when renaming
	device.

config BUSYBOX_FEATURE_MDEV_EXEC
	bool "Support command execution at device addition/removal"
	default y
	depends on BUSYBOX_FEATURE_MDEV_CONF
	help
	This adds support for an optional field to /etc/mdev.conf for
	executing commands when devices are created/removed.

	For more information, please see docs/mdev.txt

config BUSYBOX_FEATURE_MDEV_LOAD_FIRMWARE
	bool "Support loading of firmware"
	default y
	depends on BUSYBOX_MDEV
	help
	Some devices need to load firmware before they can be usable.

	These devices will request userspace look up the files in
	/lib/firmware/ and if it exists, send it to the kernel for
	loading into the hardware.

config BUSYBOX_FEATURE_MDEV_DAEMON
	bool "Support daemon mode"
	default y
	depends on BUSYBOX_MDEV
	help
	Adds the -d option to run mdev in daemon mode handling hotplug
	events from the kernel like udev. If the system generates many
	hotplug events this mode of operation will consume less
	resources than registering mdev as hotplug helper or using the
	uevent applet.
config BUSYBOX_MESG
	bool "mesg (1.4 kb)"
	default y
	help
	Mesg controls access to your terminal by others. It is typically
	used to allow or disallow other users to write to your terminal

config BUSYBOX_FEATURE_MESG_ENABLE_ONLY_GROUP
	bool "Enable writing to tty only by group, not by everybody"
	default y
	depends on BUSYBOX_MESG
	help
	Usually, ttys are owned by group "tty", and "write" tool is
	setgid to this group. This way, "mesg y" only needs to enable
	"write by owning group" bit in tty mode.

	If you set this option to N, "mesg y" will enable writing
	by anybody at all. This is not recommended.
config BUSYBOX_MKE2FS
	bool "mke2fs (10 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Utility to create EXT2 filesystems.

config BUSYBOX_MKFS_EXT2
	bool "mkfs.ext2 (10 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Alias to "mke2fs".
config BUSYBOX_MKFS_MINIX
	bool "mkfs.minix (10 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The minix filesystem is a nice, small, compact, read-write filesystem
	with little overhead. If you wish to be able to create minix
	filesystems this utility will do the job for you.

config BUSYBOX_FEATURE_MINIX2
	bool "Support Minix fs v2 (fsck_minix/mkfs_minix)"
	default y
	depends on BUSYBOX_FSCK_MINIX || BUSYBOX_MKFS_MINIX
	help
	If you wish to be able to create version 2 minix filesystems, enable
	this. If you enabled 'mkfs_minix' then you almost certainly want to
	be using the version 2 filesystem support.
config BUSYBOX_MKFS_REISER
	bool "mkfs_reiser"
	default n
	select BUSYBOX_PLATFORM_LINUX
	help
	Utility to create ReiserFS filesystems.
	Note: this applet needs a lot of testing and polishing.
config BUSYBOX_MKDOSFS
	bool "mkdosfs (7.2 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Utility to create FAT32 filesystems.

config BUSYBOX_MKFS_VFAT
	bool "mkfs.vfat (7.2 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Alias to "mkdosfs".
config BUSYBOX_MKSWAP
	bool "mkswap (6.3 kb)"
	default y
	help
	The mkswap utility is used to configure a file or disk partition as
	Linux swap space. This allows Linux to use the entire file or
	partition as if it were additional RAM, which can greatly increase
	the capability of low-memory machines. This additional memory is
	much slower than real RAM, but can be very helpful at preventing your
	applications being killed by the Linux out of memory (OOM) killer.
	Once you have created swap space using 'mkswap' you need to enable
	the swap space using the 'swapon' utility.

config BUSYBOX_FEATURE_MKSWAP_UUID
	bool "UUID support"
	default y
	depends on BUSYBOX_MKSWAP
	help
	Generate swap spaces with universally unique identifiers.
config BUSYBOX_MORE
	bool "more (7 kb)"
	default y
	help
	more is a simple utility which allows you to read text one screen
	sized page at a time. If you want to read text that is larger than
	the screen, and you are using anything faster than a 300 baud modem,
	you will probably find this utility very helpful. If you don't have
	any need to reading text files, you can leave this disabled.
config BUSYBOX_MOUNT
	bool "mount (23 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	All files and filesystems in Unix are arranged into one big directory
	tree. The 'mount' utility is used to graft a filesystem onto a
	particular part of the tree. A filesystem can either live on a block
	device, or it can be accessible over the network, as is the case with
	NFS filesystems.

config BUSYBOX_FEATURE_MOUNT_FAKE
	bool "Support -f (fake mount)"
	default y
	depends on BUSYBOX_MOUNT
	help
	Enable support for faking a file system mount.

config BUSYBOX_FEATURE_MOUNT_VERBOSE
	bool "Support -v (verbose)"
	default y
	depends on BUSYBOX_MOUNT
	help
	Enable multi-level -v[vv...] verbose messages. Useful if you
	debug mount problems and want to see what is exactly passed
	to the kernel.

config BUSYBOX_FEATURE_MOUNT_HELPERS
	bool "Support mount helpers"
	default n
	depends on BUSYBOX_MOUNT
	help
	Enable mounting of virtual file systems via external helpers.
	E.g. "mount obexfs#-b00.11.22.33.44.55 /mnt" will in effect call
	"obexfs -b00.11.22.33.44.55 /mnt"
	Also "mount -t sometype [-o opts] fs /mnt" will try
	"sometype [-o opts] fs /mnt" if simple mount syscall fails.
	The idea is to use such virtual filesystems in /etc/fstab.

config BUSYBOX_FEATURE_MOUNT_LABEL
	bool "Support specifying devices by label or UUID"
	default y
	depends on BUSYBOX_MOUNT
	select BUSYBOX_VOLUMEID
	help
	This allows for specifying a device by label or uuid, rather than by
	name. This feature utilizes the same functionality as blkid/findfs.

config BUSYBOX_FEATURE_MOUNT_NFS
	bool "Support mounting NFS file systems on Linux < 2.6.23"
	default n
	depends on BUSYBOX_MOUNT
	select BUSYBOX_FEATURE_SYSLOG
	help
	Enable mounting of NFS file systems on Linux kernels prior
	to version 2.6.23. Note that in this case mounting of NFS
	over IPv6 will not be possible.

	Note that this option links in RPC support from libc,
	which is rather large (~10 kbytes on uclibc).

config BUSYBOX_FEATURE_MOUNT_CIFS
	bool "Support mounting CIFS/SMB file systems"
	default y
	depends on BUSYBOX_MOUNT
	help
	Enable support for samba mounts.

config BUSYBOX_FEATURE_MOUNT_FLAGS
	depends on BUSYBOX_MOUNT
	bool "Support lots of -o flags"
	default y
	help
	Without this, mount only supports ro/rw/remount. With this, it
	supports nosuid, suid, dev, nodev, exec, noexec, sync, async, atime,
	noatime, diratime, nodiratime, loud, bind, move, shared, slave,
	private, unbindable, rshared, rslave, rprivate, and runbindable.

config BUSYBOX_FEATURE_MOUNT_FSTAB
	depends on BUSYBOX_MOUNT
	bool "Support /etc/fstab and -a (mount all)"
	default y
	help
	Support mount all and looking for files in /etc/fstab.

config BUSYBOX_FEATURE_MOUNT_OTHERTAB
	depends on BUSYBOX_FEATURE_MOUNT_FSTAB
	bool "Support -T <alt_fstab>"
	default y
	help
	Support mount -T (specifying an alternate fstab)
config BUSYBOX_MOUNTPOINT
	bool "mountpoint (4.9 kb)"
	default y
	help
	mountpoint checks if the directory is a mountpoint.
config BUSYBOX_NOLOGIN
	bool "nologin"
	default y
	depends on BUSYBOX_FEATURE_SH_EMBEDDED_SCRIPTS
	help
	Politely refuse a login

config BUSYBOX_NOLOGIN_DEPENDENCIES
	bool "Enable dependencies for nologin"
	default y
	depends on BUSYBOX_NOLOGIN
	select BUSYBOX_CAT
	select BUSYBOX_ECHO
	select BUSYBOX_SLEEP
	help
	nologin is implemented as a shell script. It requires the
	following in the runtime environment:
		cat echo sleep
	If you know these will be available externally you can
	disable this option.
config BUSYBOX_NSENTER
	bool "nsenter (6.5 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Run program with namespaces of other processes.
config BUSYBOX_PIVOT_ROOT
	bool "pivot_root (1.1 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The pivot_root utility swaps the mount points for the root filesystem
	with some other mounted filesystem. This allows you to do all sorts
	of wild and crazy things with your Linux system and is far more
	powerful than 'chroot'.

	Note: This is for initrd in linux 2.4. Under initramfs (introduced
	in linux 2.6) use switch_root instead.
config BUSYBOX_RDATE
	bool "rdate (5.6 kb)"
	default y
	help
	The rdate utility allows you to synchronize the date and time of your
	system clock with the date and time of a remote networked system using
	the RFC868 protocol, which is built into the inetd daemon on most
	systems.
config BUSYBOX_RDEV
	bool "rdev (1.8 kb)"
	default y
	help
	Print the device node associated with the filesystem mounted at '/'.
config BUSYBOX_READPROFILE
	bool "readprofile (7.1 kb)"
	default y
	#select PLATFORM_LINUX
	help
	This allows you to parse /proc/profile for basic profiling.
config BUSYBOX_RENICE
	bool "renice (4.2 kb)"
	default y
	help
	Renice alters the scheduling priority of one or more running
	processes.
config BUSYBOX_REV
	bool "rev (4.4 kb)"
	default y
	help
	Reverse lines of a file or files.
config BUSYBOX_RTCWAKE
	bool "rtcwake (6.8 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Enter a system sleep state until specified wakeup time.
config BUSYBOX_SCRIPT
	bool "script (8.6 kb)"
	default y
	help
	The script makes typescript of terminal session.
config BUSYBOX_SCRIPTREPLAY
	bool "scriptreplay (2.4 kb)"
	default y
	help
	This program replays a typescript, using timing information
	given by script -t.
config BUSYBOX_SETARCH
	bool "setarch (3.6 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The linux32 utility is used to create a 32bit environment for the
	specified program (usually a shell). It only makes sense to have
	this util on a system that supports both 64bit and 32bit userland
	(like amd64/x86, ppc64/ppc, sparc64/sparc, etc...).

config BUSYBOX_LINUX32
	bool "linux32 (3.3 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Alias to "setarch linux32".

config BUSYBOX_LINUX64
	bool "linux64 (3.3 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Alias to "setarch linux64".
config BUSYBOX_SETPRIV
	bool "setpriv (6.6 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	select BUSYBOX_LONG_OPTS
	help
	Run a program with different Linux privilege settings.
	Requires kernel >= 3.5

config BUSYBOX_FEATURE_SETPRIV_DUMP
	bool "Support dumping current privilege state"
	default y
	depends on BUSYBOX_SETPRIV
	help
	Enables the "--dump" switch to print out the current privilege
	state. This is helpful for diagnosing problems.

config BUSYBOX_FEATURE_SETPRIV_CAPABILITIES
	bool "Support capabilities"
	default y
	depends on BUSYBOX_SETPRIV
	help
	Capabilities can be used to grant processes additional rights
	without the necessity to always execute as the root user.
	Enabling this option enables "--dump" to show information on
	capabilities.

config BUSYBOX_FEATURE_SETPRIV_CAPABILITY_NAMES
	bool "Support capability names"
	default y
	depends on BUSYBOX_SETPRIV && BUSYBOX_FEATURE_SETPRIV_CAPABILITIES
	help
	Capabilities can be either referenced via a human-readble name,
	e.g. "net_admin", or using their index, e.g. "cap_12". Enabling
	this option allows using the human-readable names in addition to
	the index-based names.
config BUSYBOX_SETSID
	bool "setsid (3.6 kb)"
	default y
	help
	setsid runs a program in a new session
config BUSYBOX_SWAPON
	bool "swapon (15 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	Once you have created some swap space using 'mkswap', you also need
	to enable your swap space with the 'swapon' utility. The 'swapoff'
	utility is used, typically at system shutdown, to disable any swap
	space. If you are not using any swap space, you can leave this
	option disabled.

config BUSYBOX_FEATURE_SWAPON_DISCARD
	bool "Support discard option -d"
	default y
	depends on BUSYBOX_SWAPON
	help
	Enable support for discarding swap area blocks at swapon and/or as
	the kernel frees them. This option enables both the -d option on
	'swapon' and the 'discard' option for swap entries in /etc/fstab.

config BUSYBOX_FEATURE_SWAPON_PRI
	bool "Support priority option -p"
	default y
	depends on BUSYBOX_SWAPON
	help
	Enable support for setting swap device priority in swapon.

config BUSYBOX_SWAPOFF
	bool "swapoff (14 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX

config BUSYBOX_FEATURE_SWAPONOFF_LABEL
	bool "Support specifying devices by label or UUID"
	default y
	depends on BUSYBOX_SWAPON || BUSYBOX_SWAPOFF
	select BUSYBOX_VOLUMEID
	help
	This allows for specifying a device by label or uuid, rather than by
	name. This feature utilizes the same functionality as blkid/findfs.
config BUSYBOX_SWITCH_ROOT
	bool "switch_root (5.5 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	The switch_root utility is used from initramfs to select a new
	root device. Under initramfs, you have to use this instead of
	pivot_root. (Stop reading here if you don't care why.)

	Booting with initramfs extracts a gzipped cpio archive into rootfs
	(which is a variant of ramfs/tmpfs). Because rootfs can't be moved
	or unmounted*, pivot_root will not work from initramfs. Instead,
	switch_root deletes everything out of rootfs (including itself),
	does a mount --move that overmounts rootfs with the new root, and
	then execs the specified init program.

	* Because the Linux kernel uses rootfs internally as the starting
	and ending point for searching through the kernel's doubly linked
	list of active mount points. That's why.

config BUSYBOX_TASKSET
	bool "taskset (4.2 kb)"
	default y
	help
	Retrieve or set a processes's CPU affinity.
	This requires sched_{g,s}etaffinity support in your libc.

config BUSYBOX_FEATURE_TASKSET_FANCY
	bool "Fancy output"
	default y
	depends on BUSYBOX_TASKSET
	help
	Needed for machines with more than 32-64 CPUs:
	affinity parameter 0xHHHHHHHHHHHHHHHHHHHH can be arbitrarily long
	in this case. Otherwise, it is limited to sizeof(long).
config BUSYBOX_UEVENT
	bool "uevent (3.1 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	uevent is a netlink listener for kernel uevent notifications
	sent via netlink. It is usually used for dynamic device creation.
config BUSYBOX_UMOUNT
	bool "umount (5.1 kb)"
	default y
	select BUSYBOX_PLATFORM_LINUX
	help
	When you want to remove a mounted filesystem from its current mount
	point, for example when you are shutting down the system, the
	'umount' utility is the tool to use. If you enabled the 'mount'
	utility, you almost certainly also want to enable 'umount'.

config BUSYBOX_FEATURE_UMOUNT_ALL
	bool "Support -a (unmount all)"
	default y
	depends on BUSYBOX_UMOUNT
	help
	Support -a option to unmount all currently mounted filesystems.
config BUSYBOX_UNSHARE
	bool "unshare (7.2 kb)"
	default y
	depends on !BUSYBOX_NOMMU
	select BUSYBOX_PLATFORM_LINUX
	select BUSYBOX_LONG_OPTS
	help
	Run program with some namespaces unshared from parent.
config BUSYBOX_WALL
	bool "wall (2.6 kb)"
	default y
	depends on BUSYBOX_FEATURE_UTMP
	help
	Write a message to all users that are logged in.

comment "Common options for mount/umount"
	depends on BUSYBOX_MOUNT || BUSYBOX_UMOUNT

config BUSYBOX_FEATURE_MOUNT_LOOP
	bool "Support loopback mounts"
	default y
	depends on BUSYBOX_MOUNT || BUSYBOX_UMOUNT
	help
	Enabling this feature allows automatic mounting of files (containing
	filesystem images) via the linux kernel's loopback devices.
	The mount command will detect you are trying to mount a file instead
	of a block device, and transparently associate the file with a
	loopback device. The umount command will also free that loopback
	device.

	You can still use the 'losetup' utility (to manually associate files
	with loop devices) if you need to do something advanced, such as
	specify an offset or cryptographic options to the loopback device.
	(If you don't want umount to free the loop device, use "umount -D".)

config BUSYBOX_FEATURE_MOUNT_LOOP_CREATE
	bool "Create new loopback devices if needed"
	default y
	depends on BUSYBOX_FEATURE_MOUNT_LOOP
	help
	Linux kernels >= 2.6.24 support unlimited loopback devices. They are
	allocated for use when trying to use a loop device. The loop device
	must however exist.

	This feature lets mount to try to create next /dev/loopN device
	if it does not find a free one.

config BUSYBOX_FEATURE_MTAB_SUPPORT
	bool "Support old /etc/mtab file"
	default n
	depends on BUSYBOX_MOUNT || BUSYBOX_UMOUNT
	select BUSYBOX_FEATURE_MOUNT_FAKE
	help
	Historically, Unix systems kept track of the currently mounted
	partitions in the file "/etc/mtab". These days, the kernel exports
	the list of currently mounted partitions in "/proc/mounts", rendering
	the old mtab file obsolete. (In modern systems, /etc/mtab should be
	a symlink to /proc/mounts.)

	The only reason to have mount maintain an /etc/mtab file itself is if
	your stripped-down embedded system does not have a /proc directory.
	If you must use this, keep in mind it's inherently brittle (for
	example a mount under chroot won't update it), can't handle modern
	features like separate per-process filesystem namespaces, requires
	that your /etc directory be writable, tends to get easily confused
	by --bind or --move mounts, won't update if you rename a directory
	that contains a mount point, and so on. (In brief: avoid.)

	About the only reason to use this is if you've removed /proc from
	your kernel.

source "config/busybox/util-linux/volume_id/Config.in"

endmenu
