#!/bin/sh

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/dropbear
NAME=dropbear


read_config() {
. /etc/dropbear/dropbear.conf

DROPBEAR_PORT=22
DROPBEAR_EXTRA_ARGS=
KEY_ARGS=""         

if [ "$BANNERFILE" != "" ] 
then                       
        DROPBEAR_BANNER=$BANNERFILE
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -b $DROPBEAR_BANNER"  
fi                                                                      
if [ "$DSSKEYFILE" != "" ]                                              
then                                                                    
        KEY_ARGS="$KEY_ARGS -d $DSSKEYFILE"                             
fi                                                                      

if [ "$RSAKEYFILE" != "" ]
then
        KEY_ARGS="$KEY_ARGS -r $RSAKEYFILE"
fi

#if [ $MOTD = false ]
#then
#        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -m"
#fi

if [ $ROOT_LOGIN = false ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -w"
fi

if [ $ROOT_PASSWORD_LOGIN = false ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -g"
fi

if [ $PASSWORD_LOGIN = false ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -s"
fi

if [ $LOCAL_PORT_FORWARDING = false ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -j"
fi

if [ $REMOTE_PORT_FORWARDING = false ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -k"
fi

if [ $ANY_HOST_FORWARD = true ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -a"
fi

if [ "$PORT" != "" ]
then
        DROPBEAR_PORT=$PORT
fi

if [ "$PIDFILE" != ""  ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -P $PIDFILE"
fi

if [ "$WINDOW_BUFFER" != "" ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -W $WINDOW_BUFFER"
fi
if [ "$KEEPALIVE" != "" ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -K $KEEPALIVE"
fi

if [ "$IDLE_TIMEOUT" != "" ]
then
        DROPBEAR_EXTRA_ARGS="$DROPBEAR_EXTRA_ARGS -I $IDLE_TIMEOUT"
fi
}

. /lib/init/initmethod-bbinit-functions.sh

dropbear_start() {

#    KEY_ARGS=""
#    test -f $DROPBEAR_DSSKEY && KEY_ARGS="$KEY_ARGS -d $DROPBEAR_DSSKEY"
#    test -f $DROPBEAR_RSAKEY && KEY_ARGS="$KEY_ARGS -r $DROPBEAR_RSAKEY"

    echo -n "starting dropbear..."
    read_config
    start-stop-daemon -S -x "$DAEMON" --oknodo -- \
        $KEY_ARGS -p "$DROPBEAR_PORT" $DROPBEAR_EXTRA_ARGS > /dev/null 2>&1

    if [ "$?" = "0" ]; then
        echo "done"
        [[ -d /etc/config-tools/events/ssh/ ]] && run-parts -a start /etc/config-tools/events/ssh/ >/dev/null 2>&1
    else
        echo "failed"
        exit 1
    fi
}

dropbear_stop() {

    echo -n "stopping dropbear..."

    [[ -d /etc/config-tools/events/ssh/ ]] && run-parts -a stop /etc/config-tools/events/ssh/ >/dev/null 2>&1

    start-stop-daemon -K -x "$DAEMON" --oknodo > /dev/null 2>&1

    if [ "$?" = "0" ]; then
        echo "done"
    else
        echo "failed"
        exit 1
    fi
}


case "$1" in
start)
    dropbear_start;;
stop)
    dropbear_stop;;
restart|force-reload)
    dropbear_stop
    dropbear_start
    ;;
*)
    N=/etc/init.d/$NAME
    echo "usage: $N {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0

