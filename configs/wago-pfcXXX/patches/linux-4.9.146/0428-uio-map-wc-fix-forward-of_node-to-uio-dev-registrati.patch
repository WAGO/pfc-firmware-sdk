From 9520ad8fbf48b264df949cb7a3fc4778f23608b8 Mon Sep 17 00:00:00 2001
From: Heinrich Toews <heinrich.toews@wago.com>
Date: Tue, 8 Sep 2020 19:53:17 +0200
Subject: [PATCH] uio: map-wc: fix: forward of_node to uio dev registration

The UIO framework creates for each UIO device its own device object. The former
fix tried falsely to pick a platform device's of_node from the newly created
uio device object. The pointer being a NULL ptr led to a use of always using
the noncached memory mapping that made this fix useless.

This fix transports the platform device's of_node through the uio_info object
to the mapping function path.

Signed-off-by: Heinrich Toews <heinrich.toews@wago.com>
---
 drivers/uio/uio.c             | 6 +++++-
 drivers/uio/uio_pdrv_genirq.c | 1 +
 include/linux/uio_driver.h    | 1 +
 3 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/uio/uio.c b/drivers/uio/uio.c
index 170d053..c10aa0d 100644
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@ -647,7 +647,7 @@ static const struct vm_operations_struct uio_physical_vm_ops = {
 static int uio_mmap_physical(struct vm_area_struct *vma)
 {
 	struct uio_device *idev = vma->vm_private_data;
-	struct device_node *np = idev->dev->of_node;
+	struct device_node *np = idev->info->of_node_parent;
 	int mi = uio_find_mem_index(vma);
 	struct uio_mem *mem;
 	if (mi < 0)
@@ -660,6 +660,10 @@ static int uio_mmap_physical(struct vm_area_struct *vma)
 		return -EINVAL;
 
 	vma->vm_ops = &uio_physical_vm_ops;
+
+	if (np == NULL)
+		return -EINVAL;
+
 	if(of_find_property(np, "uio,map-wc", NULL))
 		/* map the region as normal memory with the attributes:
 		 * non-cacheable and bufferable. On ARM this is needed for
diff --git a/drivers/uio/uio_pdrv_genirq.c b/drivers/uio/uio_pdrv_genirq.c
index bc6fc21..c2aff88 100644
--- a/drivers/uio/uio_pdrv_genirq.c
+++ b/drivers/uio/uio_pdrv_genirq.c
@@ -194,6 +194,7 @@ static int uio_pdrv_genirq_probe(struct platform_device *pdev)
 	 * Interrupt sharing is not supported.
 	 */
 
+	uioinfo->of_node_parent = pdev->dev.of_node;
 	uioinfo->handler = uio_pdrv_genirq_handler;
 	uioinfo->irqcontrol = uio_pdrv_genirq_irqcontrol;
 	uioinfo->open = uio_pdrv_genirq_open;
diff --git a/include/linux/uio_driver.h b/include/linux/uio_driver.h
index 32c0e83..fa6c994 100644
--- a/include/linux/uio_driver.h
+++ b/include/linux/uio_driver.h
@@ -95,6 +95,7 @@ struct uio_info {
 	struct uio_device	*uio_dev;
 	const char		*name;
 	const char		*version;
+	struct device_node      *of_node_parent;
 	struct uio_mem		mem[MAX_UIO_MAPS];
 	struct uio_port		port[MAX_UIO_PORT_REGIONS];
 	long			irq;
-- 
2.7.4

