From 8925b76bc3196d1bdf7a76b0d3ffd133fbb0e22b Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Fri, 10 Aug 2018 13:02:23 +0200
Subject: [PATCH] defaultenv: defaultenv-pfc: add pfc specific init script

In case of an unbootable system (all bootsources are broken), we need to signal
this with red leds. Therefore we check the return value of the boot command and
set the leds. This is a specific pfc requirement.

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 defaultenv/defaultenv-pfc-base/bin/init | 84 +++++++++++++++++++++++++++++++++
 1 file changed, 84 insertions(+)
 create mode 100644 defaultenv/defaultenv-pfc-base/bin/init

diff --git a/defaultenv/defaultenv-pfc-base/bin/init b/defaultenv/defaultenv-pfc-base/bin/init
new file mode 100644
index 0000000..cd26110
--- /dev/null
+++ b/defaultenv/defaultenv-pfc-base/bin/init
@@ -0,0 +1,84 @@
+#!/bin/sh
+
+export PATH=/env/bin
+
+global hostname
+global user
+global autoboot_timeout
+global autoboot_abort_key
+global autoboot
+global boot.default
+global linux.bootargs.base
+global linux.bootargs.console
+#linux.bootargs.dyn.* will be cleared at the beginning of boot
+global linux.bootargs.dyn.ip
+global linux.bootargs.dyn.root
+global editcmd
+
+[ -z "${global.hostname}" ] && global.hostname=generic
+[ -z "${global.user}" ] && global.user=none
+magicvar -a global.user "username (used in network filenames)"
+[ -z "${global.autoboot_timeout}" ] && global.autoboot_timeout=3
+magicvar -a global.autoboot_timeout "timeout in seconds before automatic booting"
+[ -z "${global.autoboot_abort_key}" ] && global.autoboot_abort_key=any
+magicvar -a global.autoboot_abort_key "key to abort automatic booting (valid options: any, ctrl-c)"
+[ -z "${global.boot.default}" ] && global.boot.default=net
+[ -z "${global.editcmd}" ] && global.editcmd=sedit
+[ -z "${global.autoboot}" ] && global.autoboot=0
+
+[ -e /env/config-board ] && /env/config-board
+/env/config
+
+# allow to stop the boot before execute the /env/init/*
+# but without waiting
+timeout -s -a -v key 0
+global.autoboot="$?"
+
+echo -e -n "\e[?25h"
+if [ "${key}" = "q" ]; then
+	exit
+fi
+
+for i in /env/init/*; do
+	. $i
+done
+
+if [ "${global.autoboot_abort_key}" = "ctrl-c" ]; then
+	abort_string="ctrl-c"
+	abort_args="-c"
+else
+	abort_string="any key"
+	abort_args="-a"
+fi
+
+if [ -e /env/menu ]; then
+	echo -e -n "\nHit m for menu or $abort_string to stop autoboot: "
+else
+	echo -e -n "\nHit $abort_string to stop autoboot: "
+fi
+
+if [ "$global.autoboot" = 0 ]; then
+	timeout $abort_args $global.autoboot_timeout -v key
+	global.autoboot="$?"
+fi
+
+if [ "${key}" = "q" ]; then
+	exit
+fi
+
+if [ "$global.autoboot" = 0 ]; then
+	boot
+	if [ ! "$?" = "0" ]; then
+		echo -e ${error} "$0: could not boot at least one of this bootsources: ${global.boot.default}"
+		pfc-config-broken-boot
+		exit 1
+	fi
+fi
+
+if [ -e /env/menu ]; then
+	if [ "${key}" != "m" ]; then
+		echo -e "\ntype exit to get to the menu"
+		sh
+	fi
+	/env/menu/mainmenu
+fi
-- 
2.7.4

