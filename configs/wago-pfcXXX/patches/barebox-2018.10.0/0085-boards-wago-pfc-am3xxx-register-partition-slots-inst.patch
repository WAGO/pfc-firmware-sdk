From ecb26460f22d47eada049f1a1e840b78740cb884 Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Wed, 12 Sep 2018 11:11:53 +0200
Subject: [PATCH] boards: wago-pfc-am3xxx: register partition slots instead
 using offsets

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 arch/arm/boards/wago-pfc-am335x/board.c            | 10 ++++-
 arch/arm/boards/wago-pfc-am35xx/board-mlo.c        | 46 ++++++++++++++++++----
 arch/arm/boards/wago-pfc-am35xx/board.c            |  3 +-
 .../mach-omap/include/mach/am3xxx-pfc-generic.h    | 20 ++++++++++
 4 files changed, 69 insertions(+), 10 deletions(-)
 create mode 100644 arch/arm/mach-omap/include/mach/am3xxx-pfc-generic.h

diff --git a/arch/arm/boards/wago-pfc-am335x/board.c b/arch/arm/boards/wago-pfc-am335x/board.c
index be77fca..aa7df12 100644
--- a/arch/arm/boards/wago-pfc-am335x/board.c
+++ b/arch/arm/boards/wago-pfc-am335x/board.c
@@ -33,6 +33,7 @@
 #include <generated/mach-types.h>
 #include <mach/am33xx-generic.h>
 #include <mach/am33xx-silicon.h>
+#include <mach/am3xxx-pfc-generic.h>
 #include <mach/bbu.h>
 #include <globalvar.h>
 #include <xsection.h>
@@ -72,6 +73,13 @@ static char *boot_emmcslots[] = {
 	"/dev/mmc1.boot3",
 };
 
+static struct omap_barebox_boot_parts pfc_barebox_boot_parts = {
+	.boot_nandslots = boot_nandslots,
+	.boot_emmcslots = boot_emmcslots,
+	.num_boot_nandslots = ARRAY_SIZE(boot_nandslots),
+	.num_boot_emmcslots = ARRAY_SIZE(boot_emmcslots),
+};
+
 static int pfc_set_ethaddr(void)
 {
 	u8 mac[6];
@@ -175,7 +183,7 @@ static int pfc_devices_init(void)
 						ARRAY_SIZE(boot_nandslots));
 
 	of_device_enable_path("/chosen/environment-sd");
-	omap_set_barebox_part(&pfc_barebox_part);
+	omap_set_barebox_boot_parts(&pfc_barebox_boot_parts);
 	defaultenv_append_directory(defaultenv_pfc_am335x);
 
 	armlinux_set_architecture(MACH_TYPE_PFC_AM335X);
diff --git a/arch/arm/boards/wago-pfc-am35xx/board-mlo.c b/arch/arm/boards/wago-pfc-am35xx/board-mlo.c
index 60d95d6..c87fb19 100644
--- a/arch/arm/boards/wago-pfc-am35xx/board-mlo.c
+++ b/arch/arm/boards/wago-pfc-am35xx/board-mlo.c
@@ -50,14 +50,19 @@
 #include <generated/mach-types.h>
 #include <mach/omap3-devices.h>
 #include <mach/generic.h>
+#include <mach/am3xxx-pfc-generic.h>
+#include <nand.h>
+
+static char *boot_nandslots[] = {
+	"/dev/nand0.boot0.bb",
+	"/dev/nand0.boot1.bb",
+	"/dev/nand0.boot2.bb",
+	"/dev/nand0.boot3.bb"
+};
 
-/* map first four erase blocks */
-static struct omap_barebox_part pfc200_mlo_part = {
-	/* start of boot0..boot3 (stage2 bootcode),
-	 * we have 4x partitions
-	 */
-	.nand_offset = 4 * SZ_128K,
-	.nand_size = 4 * SZ_128K,
+static struct omap_barebox_boot_parts pfc_barebox_boot_parts = {
+	.boot_nandslots = boot_nandslots,
+	.num_boot_nandslots = ARRAY_SIZE(boot_nandslots),
 };
 
 /**
@@ -106,7 +111,6 @@ static int pfc200_init_devices(void)
 	gpmc_generic_init(0x10);
 #endif
 	omap_add_gpmc_nand_device(&nand_plat);
-	omap_set_barebox_part(&pfc200_mlo_part);
 
 	if (bootsource_get() == BOOTSOURCE_MMC) {
 		if (bootsource_get_instance() == 0)
@@ -122,3 +126,29 @@ static int pfc200_init_devices(void)
 	return 0;
 }
 device_initcall(pfc200_init_devices);
+
+#define BOOT_START_OFFSET 	0x80000
+#define BOOT_SIZE		0x80000
+static int pfc200_create_boot_partitions(void)
+{
+	int i = 0;
+	loff_t offset = BOOT_START_OFFSET;
+	char part_name[12];
+
+	do {
+		sprintf(part_name, "nand0.boot%d", i);
+		devfs_add_partition("nand0", offset, BOOT_SIZE,
+					DEVFS_PARTITION_FIXED, part_name);
+
+		dev_add_bb_dev(part_name, "bb");
+
+		offset += BOOT_SIZE;
+		i++;
+
+	} while (i < pfc_barebox_boot_parts.num_boot_nandslots);
+
+	omap_set_barebox_boot_parts(&pfc_barebox_boot_parts);
+
+	return 0;
+}
+late_initcall(pfc200_create_boot_partitions);
diff --git a/arch/arm/boards/wago-pfc-am35xx/board.c b/arch/arm/boards/wago-pfc-am35xx/board.c
index 594a447..e4ef5a5 100644
--- a/arch/arm/boards/wago-pfc-am35xx/board.c
+++ b/arch/arm/boards/wago-pfc-am35xx/board.c
@@ -37,6 +37,7 @@
 #include <bootsource.h>
 #include <asm/armlinux.h>
 #include <generated/mach-types.h>
+#include <mach/am33xx-generic.h>
 #include <mach/am33xx-silicon.h>
 #include <mach/sys_info.h>
 #include <mach/syslib.h>
@@ -50,6 +51,7 @@
 
 #include <mach/am33xx-clock.h>
 #include <mach/omap3-devices.h>
+#include <mach/am3xxx-pfc-generic.h>
 #include <mach/bbu.h>
 #include <globalvar.h>
 #include <xsection.h>
@@ -233,7 +235,6 @@ static int pfc200_devices_init(void)
 	printf("register davinci emac driver via old method\n");
 	platform_device_register(&pfc_emac_device);
 
-	omap_set_barebox_part(&pfc_barebox_part);
 	defaultenv_append_directory(defaultenv_pfc_am35xx);
 
 	armlinux_set_architecture(MACH_TYPE_PFC_AM35XX);
diff --git a/arch/arm/mach-omap/include/mach/am3xxx-pfc-generic.h b/arch/arm/mach-omap/include/mach/am3xxx-pfc-generic.h
new file mode 100644
index 0000000..846cdd7
--- /dev/null
+++ b/arch/arm/mach-omap/include/mach/am3xxx-pfc-generic.h
@@ -0,0 +1,20 @@
+#ifndef __MACH_AM3XXX_PFC_GENERIC_H
+#define __MACH_AM3XXX_PFC_GENERIC_H
+
+struct omap_barebox_boot_parts {
+	char **boot_nandslots;
+	char **boot_emmcslots;
+	int num_boot_nandslots;
+	int num_boot_emmcslots;
+};
+
+#ifdef CONFIG_SHELL_NONE
+int omap_set_barebox_boot_parts(struct omap_barebox_boot_parts *parts);
+#else
+static inline int omap_set_barebox_boot_parts(struct omap_barebox_boot_parts *parts)
+{
+	return 0;
+}
+#endif
+
+#endif /* __MACH_AM3XXX_PFC_GENERIC_H */
-- 
2.7.4

