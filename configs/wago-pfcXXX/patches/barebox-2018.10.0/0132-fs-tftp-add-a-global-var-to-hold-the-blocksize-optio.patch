From dbd67a4f47bbef49682de2a88dfc9fb6b0fdf874 Mon Sep 17 00:00:00 2001
From: Heinrich Toews <heinrich.toews@wago.com>
Date: Wed, 17 Oct 2018 11:46:27 +0000
Subject: [PATCH] fs: tftp: add a global var to hold the blocksize option

It generally makes sense to make the blocksize option adjustable
in order to be more flexible to the servers capability.

According to rfc2348 only values between 8 to 65464 octets are
supported whereby in barebox due to problems with IP fragmentation
1468 is to be the max value allowed.

At this moment no checking for a valid value is considered.

Signed-off-by: Heinrich Toews <heinrich.toews@wago.com>
---
 fs/tftp.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/fs/tftp.c b/fs/tftp.c
index 5afb052..def5aaa 100644
--- a/fs/tftp.c
+++ b/fs/tftp.c
@@ -35,6 +35,8 @@
 #include <linux/err.h>
 #include <kfifo.h>
 #include <linux/sizes.h>
+#include <magicvar.h>
+#include <globalvar.h>
 
 #define TFTP_PORT	69	/* Well known TFTP port number */
 
@@ -72,6 +74,8 @@
 
 #define TFTP_ERR_RESEND	1
 
+static int global_tftp_block_size = TFTP_BLOCK_SIZE;
+
 struct file_priv {
 	struct net_connection *tftp_con;
 	int push;
@@ -401,7 +405,7 @@ static struct file_priv *tftp_do_open(struct device_d *dev,
 	priv->block = 1;
 	priv->err = -EINVAL;
 	priv->filename = dpath(dentry, fsdev->vfsmount.mnt_root);
-	priv->blocksize = TFTP_BLOCK_SIZE;
+	priv->blocksize = global_tftp_block_size;
 	priv->block_requested = -1;
 
 	priv->fifo = kfifo_alloc(TFTP_FIFO_SIZE);
@@ -734,6 +738,10 @@ static struct fs_driver_d tftp_driver = {
 
 static int tftp_init(void)
 {
+	globalvar_add_simple_int("tftp.blocksize", &global_tftp_block_size, "%u");
+
 	return register_fs_driver(&tftp_driver);
 }
 coredevice_initcall(tftp_init);
+
+BAREBOX_MAGICVAR_NAMED(global_tftp_block_size, global.tftp.blocksize, "TFTP Blocksize Option");
-- 
2.7.4

