#!/bin/sh
#
#
# chkconfig: - 12 88
# description: Provides a set of daemons to manage access to remote directories
#              and authentication mechanisms. It provides an NSS and PAM
#              interface toward the system and a pluggable backend system to
#              connect to multiple different account sources. It is also the
#              basis to provide client auditing and policy services for projects
#              like FreeIPA.
#
### BEGIN INIT INFO
# Provides: sssd
# Required-Start: $remote_fs $time
# Should-Start: $syslog
# Should-Stop: $null
# Required-Stop: $null
# Default-Stop: 0 1 6
# Short-Description: System Security Services Daemon
# Description: Provides a set of daemons to manage access to remote directories
#              and authentication mechanisms. It provides an NSS and PAM
#              interface toward the system and a pluggable backend system to
#              connect to multiple different account sources. It is also the
#              basis to provide client auditing and policy services for projects
#              like FreeIPA.
### END INIT INFO

RETVAL=0
prog="sssd"

SSSD=/usr/sbin/sssd
SSSD_OPTS="-D"

LOCK_FILE=/var/lock/sssd.lock
PID_FILE=/var/run/sssd.pid

TIMEOUT=15

start() {
    [ -x $SSSD ] || exit 5
    echo -n "Starting $prog: "
    start-stop-daemon -S -p $PID_FILE -x ${SSSD} -- ${SSSD_OPTS}
    RETVAL=$?
    echo
    [ "$RETVAL" = 0 ] && touch $LOCK_FILE

    # Wait for pidfile creation or timeout
    sec=0
    [ "$RETVAL" = 0 ] && while [ $sec -lt $TIMEOUT -a ! -f $PID_FILE ]
    do
        sleep 1
        sec=$(($sec+1))
    done

    if [ "$sec" = "$TIMEOUT" ]; then
        RETVAL=-1
    fi

    return $RETVAL
}

stop() {
    echo -n "Stopping $prog: "
    pid=`cat $PID_FILE`
    start-stop-daemon -K -p ${PID_FILE} -x ${SSSD} -s TERM
    RETVAL=$?

    # Wait until the monitor exits
    while (checkpid $pid)
    do
        usleep 100000
    done

    echo
    [ "$RETVAL" = 0 ] && rm -f $LOCK_FILE
    return $RETVAL
}

reload() {
    echo -n "Reloading $prog: "
    start-stop-daemon -K -p ${PID_FILE} -x ${SSSD} -s HUP
    RETVAL=$?
    echo
    return $RETVAL
}

restart() {
        stop
        start
}

force_reload() {
    restart
}

wago_status() {
    local pid

    pid="$(start-stop-daemon -K -t -x "${SSSD}" | grep -E -o '[0-9]*' || true)"
    if [ -z "${pid}" ]; then
        if [ -f "${PID_FILE}" ]; then
            pid=$(cat "${PID_FILE}" || true)
            if ! checkpid ${pid}; then
                echo "${prog} dead but pid file exists"
                return 1
            fi
        fi
    else
        echo "${prog} (pid $pid) is running..."
        return 0
    fi

    if [ -f "${LOCK_FILE}" ]; then
        echo "${prog} dead but locked"
        return 2
    fi

    echo "${prog} is stopped"
    return 3
}

wago_status_q() {
    wago_status >/dev/null 2>&1
}

checkpid() {
    local p

    for p in $*; do
        [ -d "/proc/$p" ] && return 0
    done

    return 1
}

case "$1" in
    start)
        wago_status_q && exit 0
        $1
        ;;

    stop)
        wago_status_q || exit 0
        $1
        ;;

    restart)
        $1
        ;;

    reload)
        wago_status_q || exit 7
        $1
        ;;

    force-reload)
        force_reload
        ;;

    status)
        wago_status
        ;;

    condrestart|try-restart)
        wago_status_q || exit 0
        restart
        ;;
    *)
    echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
    exit 2
esac
exit $?
