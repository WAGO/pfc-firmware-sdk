#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: change_screen_state
#
# Change change state of screensaver or cleanmode
#
# Author: WAGO GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib


#--------------------------------------------------------------------
# help text (requested with specified parameter)
#--------------------------------------------------------------------
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Change state of display or cleanmode *"
  echo
  echo "Usage: change_screen_state [ display-state=display-state-value ] [ clearmode-state=clearmode-state-value ]"
  echo
  echo "display-state-value: on / on"
  echo "clearmode-state-value: on / off"
  echo
  exit $SUCCESS
fi

displayState=`GetParameterValue display-state $*`
cleanmodeState=`GetParameterValue cleanmode-state $*`
#echo "displayState:"$displayState "cleanmode-state:"$cleanmodeState

actualDisplayState=`/etc/config-tools/get_touchscreen_config display-state`
actualCleanmodeState=`/etc/config-tools/get_touchscreen_config cleanmode-state`
#echo "actualDisplayState:"$actualDisplayState "actualCleanmodeState:"$actualCleanmodeState

#--------------------------------------------------------------------
# display (screensaver)
#--------------------------------------------------------------------
if [ -n "$displayState" ] && [ "$displayState" != "$actualdisplayState" ]; then

  #echo "change display state"
  
  # switch display on
  if [ "$displayState" = "on" ]; then 
    screen -S wago -X screen /usr/bin/screenc s 0
    if [ "$SUCCESS" != "$?" ]; then
      status=$EXECUTABLE_ERROR
      ReportError $status "(screen -S wago -X screen /usr/bin/screenc c $timeout)"
      SetLastError "Error while execution"
    fi
    
  # switch display off
  elif [ "$displayState" = "off" ]; then
    screen -S wago -X screen /usr/bin/screenc s -1
    if [ "$SUCCESS" != "$?" ]; then
      status=$EXECUTABLE_ERROR
      ReportError $status "(screen -S wago -X screen /usr/bin/screenc c $timeout)"
      SetLastError "Error while execution"
    fi

  else
    SetLastError "Invalid display state"
    status=$INVALID_PARAMETER
  fi

#--------------------------------------------------------------------
# cleanmode
#--------------------------------------------------------------------
elif [ -n "$cleanmodeState" ] && [ "$cleanmodeState" != "$actualCleanmodeState" ]; then

  # cleanmode should be switched on
  if [ "$cleanmodeState" = "on" ]; then
  
    # get timeout value from config file
    timeout=`/etc/config-tools/get_rts3scfg_value CLEANMODE Timeout`
    echo $timeout | egrep "[0-9]+" > /dev/null 2> /dev/null
    if [ "$SUCCESS" != "$?" ]; then 
      status=$INVALID_PARAMETER
      ReportError $status "(cleanmode timeout)"
      SetLastError "Can't read cleanmode timeout value"

    else
      # switch cleanmode on with configured timeout; start script in according screen to let dbus work
      #echo "timeout:"$timeout
      screen -S wago -X screen /usr/bin/screenc c $timeout
      if [ "$SUCCESS" != "$?" ]; then
        status=$EXECUTABLE_ERROR
        ReportError $status "(screen -S wago -X screen /usr/bin/screenc c $timeout)"
        SetLastError "Error while execution"
      fi
    fi

  # clearmode should be interrupted
  elif [ "$cleanmodeState" = "off" ]; then

    # switch cleanmode off; start script in according screen
    screen -S wago -X screen /usr/bin/screenc c 0
    if [ "$SUCCESS" != "$?" ]; then
      status=$EXECUTABLE_ERROR
      ReportError $status "(screen -S wago -X screen /usr/bin/screenc c 0)"
      SetLastError "Error while execution"
    fi
   
  # input value for cleanmode state is unknown
  else
    SetLastError "Invalid cleanmode state"
    status=$INVALID_PARAMETER
  fi
  
fi


exit $status
