#!/bin/bash

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2020-2021 WAGO Kontakttechnik GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: update_ipwatchd
#
# Updates ipwatchd configuration file and restarts deamon if neccessary.
#
#-----------------------------------------------------------------------------#

set -u      # error exit on undefined shell variables

# force IFS default value
IFS=$' \t\n'

function Log
{
    [[ $# -gt 0 ]] && logger -t "update_ipwatchd" "$1"
}

IPWATCHD_CONF="/etc/ipwatchd.conf"
IPWATCHD="/etc/init.d/ipwatchd"

BRCTL=/sbin/brctl
TAIL=/usr/bin/tail
CUT=/usr/bin/cut

function update_ipwatchd() {
    local bridges=($($BRCTL show | $TAIL -n +2 | $CUT -d$'\t' -f1))

    cat <<-*heredoc* > $IPWATCHD_CONF.new
# Note: This file is generated and will be overriden
# IPwatchD configuration file to support gratuitous ARP for WAGO PFC200.
# See ipwatchd.conf(5) for more details

# active means: on IP conflicts my IP is sent again to fix
# wrong arp cache entries on other hosts.
iface_configuration manual

*heredoc*

    Log "Acitvate IPWatchD for interfaces: ${bridges[*]}"

    for bridge in "${bridges[@]}"; do
        echo "iface $bridge passive" >> $IPWATCHD_CONF.new
    done

    cat <<-*heredoc* >> $IPWATCHD_CONF.new

defend_interval 10
user_script /usr/sbin/ipwatchd-script
syslog_facility daemon
*heredoc*

    diff -q $IPWATCHD_CONF.new $IPWATCHD_CONF > /dev/null
    if [ "$?" -eq 1 ]; then
        sync
        mv $IPWATCHD_CONF.new $IPWATCHD_CONF
        sync
        $IPWATCHD restart &> /dev/null
    else
        rm $IPWATCHD_CONF.new
    fi

}

update_ipwatchd



























































































