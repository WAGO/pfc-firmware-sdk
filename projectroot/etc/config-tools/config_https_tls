#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2016-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script:   /etc/config-tools/config_https_tls
#
# Brief:    Switch between cipher list pre-sets "strong" and "extended-compatibility".
#           Older web browsers may not support the strong list.
#
# Author:   HJH: WAGO GmbH & Co. KG
# Author:   PEn: WAGO GmbH & Co. KG
#-----------------------------------------------------------------------------#

# make use of undefined variables an error
set -u

# Check argument value against a selection of values.
arg_assert()
{
    local arg="$1"
    local sel=$2
    local msg="$3"
    local valid=""

    for val in $sel; do
        if [[ "$arg" == "$val" ]]; then
            valid=1
            break
        fi
    done
    if [[ ! $valid ]]; then
        status=$INVALID_PARAMETER
        SetLastError "$msg"
        exit $status
    fi
}

# load general definitions and functions
if [[ ! -f "/etc/config-tools/config_tool_lib" ]]; then
    echo "config_tool_lib missing"
    exit 255
fi
source /etc/config-tools/config_tool_lib

if [[ $# -eq 0 ]]; then
    SetLastError "Missing argument"
    exit $MISSING_PARAMETER
fi
status=$SUCCESS

# show help-text if requested
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo
    echo "* Configure HTTPS TLS cipher list set *"
    echo
    echo "Usage: $0 cipher-list=<standard|extended-compatibility|strong> [restart-webserver=<YES|NO>]"
    echo "Default cipher is \"extended-compatibility\". Default restart-webserver value is \"YES\""
    echo "restart-webserver=NO is intended for WBM use"
    echo
    echo "Cipher option \"standard\" is an alias for \"extended-compatibility\""
    echo
    exit $status
fi

SYMLINK="/etc/lighttpd/tls.conf"
INITSCRIPT="/etc/init.d/lighttpd"
ciphers=""
websrestart="YES"

for ARG in "$@"; do
    case "$ARG" in
        cipher-list=*)
            ciphers=${ARG#cipher-list=}
            if [[ "$ciphers" == "standard" ]]; then
                ciphers="extended-compatibility"
            fi
            ;;
        restart-webserver=*)
            websrestart=${ARG#restart-webserver=}
            arg_assert "$websrestart" "YES NO" "Invalid restart-web-server value."
            ;;
        *)
            SetLastError "Unknown or incomplete argument \"$ARG\""
            exit $INVALID_PARAMETER
            ;;
    esac
done

newlink="tls-$ciphers.conf"
if [[ $status -eq 0 && "$ciphers" && "$(readlink $SYMLINK)" != "$newlink" ]]; then
    ln -sf "$newlink" "$SYMLINK"
    status=$?
    if [[ $status -eq 0 ]]; then
        if [[ "$websrestart" == "YES" ]]; then
            $INITSCRIPT stop &> /dev/null
            $INITSCRIPT start &> /dev/null
        fi
    else
        SetLastError "Setting symbolic link $SYMLINK failed"
        status=$EXECUTABLE_ERROR
    fi
fi

exit $status
