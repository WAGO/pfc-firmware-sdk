#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: change_keyboard_layout
#
# Change the keyboard layout.
#
# Author: WAGO GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib



ChangeKeyboardLayout()
#
# Change the keyboard-layout of the serial interface
#
{
  newLayout=$1
  status=$SUCCESS
  #echo "change keyboard-layout to" $newLayout

  # change the layout-names from the file to the names used on webpage
  if [ "$GERMAN" == "$newLayout" ]; then
    newLayout=$LATIN
  elif [ "$ENGLISH" == "$newLayout" ]; then
    newLayout=$UK
  else
    status=$INVALID_PARAMETER
    ReportError $status "($newLayout)"
    SetLastError "Layout invalid"
  fi

  if [ "$SUCCESS" == "$status" ]; then
  
    # check whether config-file exists 
    if [ ! -f $KEYBOARD_LAYOUT_FILENAME ]; then
      status=$CONFIG_FILE_MISSING
      ReportError $CONFIG_FILE_MISSING "($KEYBOARD_LAYOUT_FILENAME)"
      SetLastError "Config-file is not existing"
    else

      # regular-expression to filter display-mode itself and the whole line
      KEYBOARD_LAYOUT_REGEX="$LATIN|$UK"
      KEYBOARD_LAYOUT_LINE_REGEX="^ *$LOADKEYS $KEYBOARD_LAYOUT_REGEX"

      # search for the line and put it into string with line-number first
      local numberedLine=`egrep -n "$KEYBOARD_LAYOUT_LINE_REGEX" $KEYBOARD_LAYOUT_FILENAME`

      # cut old layout and line-number from grep-output-line
      local oldLayout=`echo $numberedLine | egrep -o $KEYBOARD_LAYOUT_REGEX`
      local lineNr=`echo "$numberedLine" | cut -d\: -f1`
      #echo -e "lineNr:"$lineNr "\noldLayout:"$oldLayout

      # change keyboard-layout-string,  option -i puts changes to the original file
      # seperate patterns by '?' because they incluces '/' themselves
      sudo $SED -i ''$lineNr' s?'$oldLayout'?'$newLayout'?g' $KEYBOARD_LAYOUT_FILENAME
      if [ "$SUCCESS" != $? ]; then
        status=$SHELL_ERROR
        ReportError $SHELL_ERROR "(ChangeKeyboardLayout sed)"
        SetLastError "Error while writing to config-file"
      else
      
        # write buffered filesystem-blocks to disk
        sync

        # start script with new keyboard-layout 
        sudo /etc/init.d/keymap start > /dev/null 2> /dev/null
        if [ "$SUCCESS" != $? ]; then
          status=$SHELL_ERROR
          ReportError $SHELL_ERROR "(keymap start)"
          SetLastError "Error while execution"
        fi

      fi
    fi
  fi

  return $status
}


#-------------- main-programm ------------------------#

status=$SUCCESS

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Change the keyboard layout *"
  echo
  echo "Usage: change_keyboard_layout < keyboard-layout=keyboard-layout-value >"
  echo
  echo "keyboard-layout-value: \"German\" | \"English\""
  echo
  exit $status
fi

newKeyboardLayout=`GetParameterValue $KEYBOARD_LAYOUT $*`
#echo newKeyboardLayout:"$newKeyboardLayout

actualKeyboardLayout=`${CONFIG_TOOLS_PATH}get_coupler_details keyboard-layout`
#echo "actualKeyboardLayout:"$actualKeyboardLayout

# if a value for keyboard-layout is denoted and new value differs from old value -> change keyboard-layout
if [ -n "$newKeyboardLayout" ] && [ "$newKeyboardLayout" != "$actualKeyboardLayout" ]; then
    ChangeKeyboardLayout $newKeyboardLayout
    status=$?
fi

exit $status
