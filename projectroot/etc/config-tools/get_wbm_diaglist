#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: get_wbm_diaglist
#
# Get list of diagnostic data for display in WBM
#
# Author: WAGO GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib

setSortKey()
{
awk '
{
        month="00"
        if($2=="Jan")
        {
                month="01"
        }
        else if($2=="Feb")
        {
                month="02"
        }
        else if($2=="Mar")
        {
                month="03"
        }
        else if($2=="Apr")
        {
                month="04"
        }
        else if($2=="May")
        {
                month="05"
        }
        else if($2=="Jun")
        {
                month="06"
        }
        else if($2=="Jul")
        {
                month="07"
        }
        else if($2=="Aug")
        {
                month="08"
        }
        else if($2=="Sep")
        {
                month="09"
        }
        else if($2=="Oct")
        {
                month="10"
        }
        else if($2=="Nov")
        {
                month="11"
        }
        else if($2=="Dec")
        {
                month="12"
        }
        printf("%s%s%s %s\n",$4,month,$3,$0)
}
'
}


PrintDecodeLog() 
{
  LOGFILES=""

  local early_log="/var/wagoearlylog.log"
  if [ -f "$early_log" ]
  then
    LOGFILES+=" $early_log"
  fi
  if [ -f "$early_log.1" ]
  then
    LOGFILES+=" $early_log.1"
  fi

  local persistence_log="/home/log/wagolog.log"
  if [ -f "$persistence_log" ]
  then
    LOGFILES+=" $persistence_log"
  fi
  if [ -f "$persistence_log.1" ]
  then
    LOGFILES+=" $persistence_log.1"
  fi

  local tmp_log="/var/log/wago/wagolog.log"
  if [ -f "$tmp_log" ]
  then
    LOGFILES+=" $tmp_log"
  fi
  if [ -f "$tmp_log.1" ]
  then
    LOGFILES+=" $tmp_log.1"
  fi

  if [ -n "$LOGFILES" ]; then
    cat $LOGFILES | setSortKey | sort | cut -d ' ' -f 2-100 | awk NF | decodeid
  fi
}

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* write output of diagnostic log for use in WBM *"
  echo
  echo "Usage: get_wbm_diaglist [ diag-count ]"
  echo 
  echo "diag-count: count of recent diagnostic notifications to show, default = show all"
  echo 
  exit $SUCCESS
fi

status=$SUCCESS

lineCount=$1
#echo "lineCount:${lineCount}

if [ -z "$lineCount" ]; then
  PrintDecodeLog
  lineCount=-1
  
else
  # check if count is valid (= integer)
  if [ -n "${lineCount//[0-9]/}" ]; then
    status=$INVALID_PARAMETER
    SetLastError "Invalid input parameter (\"diag count\")"
  else
     PrintDecodeLog | tail -n $lineCount
  fi
fi


# fake a lot of output for test
#lineNo=0
#while [ "$lineNo" -lt 30 ]; do
#  echo "Wed Nov 14 2012 06:32:48.128624 0x00060000 PROFIBUS_DP_SLAVE: S"
#  lineNo=$[$lineNo + 1]
#done

exit $status
