#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: config_clock_display_mode
#
# Configure the display-mode of the clock, 12-hour-format or 24-hour-format
#
# Author: WAGO GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib



#-------------- main-programm ------------------------#

status=$SUCCESS

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Configure the display-mode of the clock *"
  echo
  echo "Usage: config_clock_display_mode < display-mode=display-mode-value >"
  echo
  echo "display-mode-value: 12-hour-format | 24-hour-format"
  echo
  exit $status
fi


# if config-file for time-display format doesn't exist
if [ ! -f $CLOCK_FORMAT_FILENAME ]; then

  displayMode="HOUR_FORMAT_24"

# file is existing but can't be written
elif [ ! -w $CLOCK_FORMAT_FILENAME ]; then

  ReportError $FILE_NOT_WRITEABLE "($CLOCK_FORMAT_FILENAME)"
  SetLastError "Error while execution"
  exit $FILE_NOT_WRITEABLE

fi


# filter input parmeter of input-string and check if it is valid
newDisplayMode=`GetParameterValue $DISPLAY_MODE $*`

#echo "newDisplayMode:"$newDisplayMode 

# if no parameter is given, take 24-hour-format as default
if [ -z $newDisplayMode ]; then
  
  newDisplayMode=$HOUR_FORMAT_24  

elif [ "$HOUR_FORMAT_24" != "$newDisplayMode" ] && [ "$HOUR_FORMAT_12" != "$newDisplayMode" ]; then

  ReportError $INVALID_PARAMETER "($newDisplayMode)"
  SetLastError "Display-mode invalid"
  exit $INVALID_PARAMETER

fi


actualDisplayMode=`${CONFIG_TOOLS_PATH}get_clock_data $DISPLAY_MODE`

#echo "actualDisplayMode:"$actualDisplayMode 
 
# if a value for display-mode is denoted and new value differs from old value -> change display-mode
if [ "$actualDisplayMode" != "$newDisplayMode" ]; then

  # change line in config-file
  sudo $SED -i '/'$DISPLAY_MODE'/c\'$DISPLAY_MODE'='$newDisplayMode'' $CLOCK_FORMAT_FILENAME

  if [ $? != $SUCCESS ]; then
    ReportError $WRITE_FILE_ERROR "($CLOCK_FORMAT_FILENAME)"
    SetLastError "Error while execution"
    exit $WRITE_FILE_ERROR
  fi

  # write buffered filesystem-blocks to disk
  sync

fi

exit $SUCCESS
