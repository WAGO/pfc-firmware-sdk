#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# This file is part of PTXdist package config-tools.
#
# Copyright (c) 2013-2022 WAGO GmbH & Co. KG
#-----------------------------------------------------------------------------#
# Script:   /etc/config-tools/get_user_info
#
# Brief:    Query login/password related information.
#
# Author:   AGa: WAGO GmbH & Co. KG
# Author:   PEn: WAGO GmbH & Co. KG
#-----------------------------------------------------------------------------#

CURRENT_AUTH_FILE_LINUX="/etc/shadow"
DEFAULT_AUTH_FILE_LINUX="/etc/config-tools/default-settings/shadow.default"


# show help-text if requested
if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
  echo
  echo "* Get information about user settings *"
  echo
  echo "Usage: "
  echo "       $0 --is-default-pwd <user>       : prints 1 if the default password is still being used (for webserver users)"
  echo "       $0 --is-default-pwd-linux <user> : prints 1 if the default password is still being used (for linux users)"
  echo
  echo "Since linux users are also used as webserver users both options are equivalent"
  echo
  exit 0
fi

# load general definitions and functions
if [[ ! -f "/etc/config-tools/config_tool_lib" ]]; then
  echo "config_tool_lib missing"
  exit 255
fi

source /etc/config-tools/config_tool_lib

function CompareDefaultWithCurrent
{
  local defaultSettingsFile="$1"
  local currentSettingsFile="$2"

  local default_hash; default_hash=$(awk -F: -v _login="$login" '$1~_login {print $2}' "$defaultSettingsFile")
  local current_hash; current_hash=$(awk -F: -v _login="$login" '$1~_login {print $2}' "$currentSettingsFile")

  if [[ "$current_hash" == "" ]]; then # user no longer exists -> error
    SetLastError "Invalid parameter"
    return $INVALID_PARAMETER
  elif [[ "$default_hash" == "$current_hash" ]]; then
    echo 1
  else
    echo 0
  fi

  return $SUCCESS
}

#-------------- start of main-programm ------------------------#


status=$SUCCESS

#-------------- basic sanity checks -------------------#

if [[ ! -f $DEFAULT_AUTH_FILE_LINUX ]]; then
  status=$CONFIG_FILE_MISSING
  ReportError $CONFIG_FILE_MISSING "($DEFAULT_AUTH_FILE_LINUX)"
  SetLastError "Settings file is missing"
  exit $status
fi
if [[ ! -f $CURRENT_AUTH_FILE_LINUX ]]; then
  status=$CONFIG_FILE_MISSING
  ReportError $CONFIG_FILE_MISSING "($CURRENT_AUTH_FILE_LINUX)"
  SetLastError "Settings file is missing"
  exit $status
fi

#-------------- get information ----------------------#

case "$1" in

  "--is-default-pwd"|"--is-default-pwd-linux")
    login="$2"
    CompareDefaultWithCurrent $DEFAULT_AUTH_FILE_LINUX $CURRENT_AUTH_FILE_LINUX
    status=$?
    ;;
  *)
    status=$MISSING_PARAMETER
    SetLastError "Missing input parameter"
    ;;
esac

exit $status
