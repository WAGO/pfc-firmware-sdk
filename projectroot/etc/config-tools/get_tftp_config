#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018-2022 WAGO GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: get_tftp_config
#
# Get configuration of TFTP server 
#
# Author: WAGO GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib

INETD_CONFIG_FILE="/etc/inetd.conf"

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Get configuration of TFTP server *"
  echo
  echo "Usage: get_tftp_config [ \"state\" | \"download-dir\" ]"
  echo 
  exit $SUCCESS
fi


function GetTftpState
{
  tftpState="disabled"
  
  # search line including TFTP configuration without comment char 
  grep "^ *tftp" $INETD_CONFIG_FILE > /dev/null 2> /dev/null
  if [ "$SUCCESS" = $? ]; then
    tftpState="enabled"
  fi
  
  printf "$tftpState"
}

function GetDownloadDir
{
  status=$SUCCESS
  
  downloadDir=""
  
  # search line including TFTP configuration (comment char is irrelevant) 
  tftpLine=`cat $INETD_CONFIG_FILE | grep "^#* *tftp" 2> /dev/null`
  if [ "$SUCCESS" = $? ]; then
  
    # filter download directory option pair ("-l download-dir"), and at least download directory itself 
    downloadDirOption=`echo $tftpLine | grep -o "\-l *[^ ]*"`
    #echo $downloadDirOption
    downloadDir=${downloadDirOption##-l }
  fi

  printf "$downloadDir"
  return $status  
}


status=$SUCCESS

# read input parameter
paramName=$1
#echo "paramName:${paramName}" #> /etc/config-tools/output

# check for missing input parameter
if [ -z "$paramName" ]; then
  status=$MISSING_PARAMETER
  SetLastError "Missing input parameter"
  exit $status
fi

#check whether config-file exists 
if [ ! -f $TFTP_CONFIG_FILE ]; then
  status=$CONFIG_FILE_MISSING
  SetLastError "Config file is missing"
  exit $status
fi

# tftp dgram udp wait nobody /sbin/tftpd tftpd -l /home

if [ "state" = "$paramName" ]; then
  actualState=`GetTftpState`
  status=$?
  printf "$actualState"
  
elif [ "download-dir" = "$paramName" ]; then
  downloadDir=`GetDownloadDir`
  status=$?
  printf "$downloadDir"

else
  status=$INVALID_PARAMETER
  SetLastError "Invalid parameter"
fi

exit $status
